-- Use database
USE gdb023;


-- Request 1: Provide the list of markets in which customer "Atliq Exclusive" operates its business in the APAC region.
SELECT  distinct(market) 
FROM dim_customer
WHERE customer='Atliq Exclusive' and region='APAC';


-- Request 2: What is the percentage of unique product increase in 2021 vs. 2020? 
WITH temp1 AS(
SELECT COUNT(DISTINCT(product_code)) AS unique_product_2020 FROM fact_sales_monthly WHERE fiscal_year=2020
),
temp2 AS(
SELECT COUNT(DISTINCT(product_code)) AS unique_product_2021 FROM fact_sales_monthly WHERE fiscal_year=2021
)
SELECT t1.unique_product_2020, t2.unique_product_2021,
      ROUND(100*((t2.unique_product_2021-t1.unique_product_2020)/t1.unique_product_2020),2) AS percentage_chg
FROM temp1 t1 join temp2 t2 ;


-- Request 3: Provide a report with all the unique product counts for each segment and sort them in descending order of product counts. 
SELECT segment, COUNT(DISTINCT(product_code)) AS product_count
FROM dim_product
GROUP BY segment
ORDER BY product_count DESC;


-- Request 4: Follow-up: Which segment had the most increase in unique products in 2021 vs 2020? 
WITH temp1 AS(
 select p.segment as segment1 ,count(distinct(s.product_code)) as product_count_2020 from fact_sales_monthly s join dim_product p on s.product_code=p.product_code where s.fiscal_year=2020 group by segment order by segment  
 ),
 temp2 AS(
 select p.segment as segment2 ,count(distinct(s.product_code)) as product_count_2021 from fact_sales_monthly s join dim_product p on s.product_code=p.product_code where s.fiscal_year=2021 group by segment order by segment
 )
 SELECT t1.segment1, t1.product_count_2020 , t2.product_count_2021, (product_count_2021-product_count_2020) AS difference
 from temp1 t1 join temp2 t2  on t1.segment1=t2.segment2 order by difference desc ;
 
 
 -- Request 5: Get the products that have the highest and lowest manufacturing costs.
WITH temp AS(
select f.product_code AS product_code, p.product AS product, f.manufacturing_cost as manufacturing_cost
from fact_manufacturing_cost f join dim_product p on f.product_code=p.product_code
 group by p.product,p.product_code
 order by manufacturing_cost desc )
 SELECT product_code, product,manufacturing_cost from temp where manufacturing_cost=(select max(manufacturing_cost) from temp)
 union 
SELECT product_code, product,manufacturing_cost from temp where manufacturing_cost=(select min(manufacturing_cost) from temp);

 
-- Request 6: Generate a report which contains the top 5 customers who received an average high pre_invoice_discount_pct for the fiscal year 2021 and in the Indian market. 
SELECT c.customer_code,c.customer, round(f.pre_invoice_discount_pct,2) AS average_discount_percentage
FROM dim_customer c JOIN fact_pre_invoice_deductions f ON c.customer_code=f.customer_code
WHERE c.market='India' and f.fiscal_year=2021 
ORDER BY average_discount_percentage DESC limit 5;


-- Request 7: Get the complete report of the Gross sales amount for the customer “Atliq Exclusive” for each month. This analysis helps to get an idea of low and high-performing months and take strategic decisions.
SELECT monthname(s.date) AS Month, s.fiscal_year AS Year, sum(g.gross_price) AS Gross_sales_amount  
FROM dim_customer c JOIN fact_sales_monthly s ON c.customer_code=s.customer_code 
JOIN fact_gross_price g ON g.product_code=s.product_code 
WHERE c.customer='Atliq Exclusive'
GROUP BY Month, Year;


-- Request 8: In which quarter of 2020, got the maximum total_sold_quantity? 
select case when month(date) in (9,10,11) then '1'
            when month(date) in (12,1,2) then '2'
            when month(date) in (3,4,5) then '3'
            when month(date) in (6,7,8) then '4'
            end as Quarter_in_2020, sum(sold_quantity) as total_sold_quantity
from fact_sales_monthly 
where fiscal_year=2020
group by Quarter_in_2020
order by  total_sold_quantity desc;


-- Request 9: Which channel helped to bring more gross sales in the fiscal year 2021 and the percentage of contribution? 
with temp as(
select c.channel as channel, (sum(g.gross_price * s.sold_quantity)/1000000)  as gross_sales
from dim_customer c join fact_sales_monthly s on c.customer_code=s.customer_code
join fact_gross_price g on  g.product_code=s.product_code
where s.fiscal_year=2021
group by channel
)
select channel, round(gross_sales,2) as gross_sales_mln, round(100 * (gross_sales/sum(gross_sales) over()) ,2) as percentage from temp group by channel order by percentage desc;


-- Request 10: Get the Top 3 products in each division that have a high total_sold_quantity in the fiscal_year 2021
with temp1 as(
select p.division as division, p.product_code as product_code, p.product as product, sum(s.sold_quantity) as total_sold_quantity from dim_product p join fact_sales_monthly s on s.product_code=p.product_code
where s.fiscal_year=2021 
group by division,product_code, product
),
temp_2 as(
select *, rank() over (partition by division order by total_sold_quantity desc )  as rank_order from temp1) 
select * from temp_2 where rank_order<=3;
